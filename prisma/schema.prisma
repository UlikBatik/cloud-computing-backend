datasource db {
    provider = "mysql"
    url = env("DB_URL")
}


generator client {
    provider = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Batik {
  BATIKID    String @id @db.Char(5)
  BATIKNAME  String @db.VarChar(50)
  BATIKDESC  String @db.VarChar(200)
  BATIKIMG   String @db.VarChar(255)
  POST       Post[]

  @@index([BATIKID])
  @@fulltext([BATIKNAME])
  @@fulltext([BATIKNAME, BATIKDESC])
}

model Likes {
  USERID  String @db.Char(16)
  POSTID  String @db.Char(16)

  @@id([USERID, POSTID])

  user User @relation(fields: [USERID], references: [USERID], onDelete: Restrict, onUpdate: Restrict)
  post Post @relation(fields: [POSTID], references: [POSTID], onDelete: Restrict, onUpdate: Restrict)
}

model Post {
  POSTID     String @id @db.Char(16) @default(nanoid(16))
  USERID     String @db.Char(16)
  BATIKID    String @db.Char(5)
  POSTIMG    String @db.VarChar(255)
  CAPTION    String? @db.VarChar(250)
  LIKES      Int @default(0)
  CREATEDAT  DateTime @default(now()) @db.Timestamp(0)
  UPDATEDAT  DateTime @default(now()) @db.Timestamp(0)

  user  User  @relation(fields: [USERID], references: [USERID], onDelete: Restrict, onUpdate: Restrict)
  batik Batik @relation(fields: [BATIKID], references: [BATIKID], onDelete: Restrict, onUpdate: Restrict)
  likes Likes[]
}

model User {
  USERID     String @id @db.Char(16) @default(nanoid(16))
  USERNAME   String @db.VarChar(25)
  EMAIL      String @db.VarChar(200) @unique
  PASSWORD   String @db.VarChar(255)
  PROFILEIMG String? @db.VarChar(255)
  CREATEDAT  DateTime @default(now()) @db.Timestamp(0)
  UPDATEDAT  DateTime @default(now()) @db.Timestamp(0)

  post  Post[]
  likes Likes[]
}
